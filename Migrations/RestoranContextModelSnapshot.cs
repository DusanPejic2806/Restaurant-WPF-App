// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RestoranProjekat.Modeli;

#nullable disable

namespace RestoranProjekat.Migrations
{
    [DbContext(typeof(RestoranContext))]
    partial class RestoranContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("RestoranProjekat.Modeli.Artikli", b =>
                {
                    b.Property<int>("SifraArtikla")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SifraArtikla"));

                    b.Property<double>("CenaArtikla")
                        .HasColumnType("float");

                    b.Property<int>("DostupnaKolicina")
                        .HasColumnType("int");

                    b.Property<string>("NazivArtikla")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SifraArtikla");

                    b.ToTable("Artikli");
                });

            modelBuilder.Entity("RestoranProjekat.Modeli.ArtikliRacuni", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ArtikliNaRacunuSifraArtikla")
                        .HasColumnType("int");

                    b.Property<int>("RacuniSaArtiklomBrojRacuna")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ArtikliNaRacunuSifraArtikla");

                    b.HasIndex("RacuniSaArtiklomBrojRacuna");

                    b.ToTable("ArtikliRacuni");
                });

            modelBuilder.Entity("RestoranProjekat.Modeli.Racuni", b =>
                {
                    b.Property<int>("BrojRacuna")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BrojRacuna"));

                    b.Property<int>("IdStolaBrojStola")
                        .HasColumnType("int");

                    b.Property<int>("IdZaposlenogZaposleniId")
                        .HasColumnType("int");

                    b.Property<DateTime>("datumIzdavanja")
                        .HasColumnType("datetime2");

                    b.HasKey("BrojRacuna");

                    b.HasIndex("IdStolaBrojStola");

                    b.HasIndex("IdZaposlenogZaposleniId");

                    b.ToTable("Racuni");
                });

            modelBuilder.Entity("RestoranProjekat.Modeli.Stolovi", b =>
                {
                    b.Property<int>("BrojStola")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BrojStola"));

                    b.Property<int>("nazivStola")
                        .HasColumnType("int")
                        .HasColumnName("BrojStola");

                    b.HasKey("BrojStola");

                    b.ToTable("Stolovi");
                });

            modelBuilder.Entity("RestoranProjekat.Modeli.Zaposleni", b =>
                {
                    b.Property<int>("ZaposleniId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ZaposleniId"));

                    b.Property<string>("Ime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prezime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ZaposleniId");

                    b.ToTable("Zaposleni");
                });

            modelBuilder.Entity("RestoranProjekat.Modeli.ArtikliRacuni", b =>
                {
                    b.HasOne("RestoranProjekat.Modeli.Artikli", "Artikli")
                        .WithMany("ArtikliRacuni")
                        .HasForeignKey("ArtikliNaRacunuSifraArtikla")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RestoranProjekat.Modeli.Racuni", "Racuni")
                        .WithMany("ArtikliRacuni")
                        .HasForeignKey("RacuniSaArtiklomBrojRacuna")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Artikli");

                    b.Navigation("Racuni");
                });

            modelBuilder.Entity("RestoranProjekat.Modeli.Racuni", b =>
                {
                    b.HasOne("RestoranProjekat.Modeli.Stolovi", "IdStola")
                        .WithMany()
                        .HasForeignKey("IdStolaBrojStola")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RestoranProjekat.Modeli.Zaposleni", "IdZaposlenog")
                        .WithMany()
                        .HasForeignKey("IdZaposlenogZaposleniId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IdStola");

                    b.Navigation("IdZaposlenog");
                });

            modelBuilder.Entity("RestoranProjekat.Modeli.Artikli", b =>
                {
                    b.Navigation("ArtikliRacuni");
                });

            modelBuilder.Entity("RestoranProjekat.Modeli.Racuni", b =>
                {
                    b.Navigation("ArtikliRacuni");
                });
#pragma warning restore 612, 618
        }
    }
}
